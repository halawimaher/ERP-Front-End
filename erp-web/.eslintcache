[{"/home/maher/Desktop/black-dashboard-react-master/src/index.js":"1","/home/maher/Desktop/black-dashboard-react-master/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js":"2","/home/maher/Desktop/black-dashboard-react-master/src/components/ThemeWrapper/ThemeWrapper.js":"3","/home/maher/Desktop/black-dashboard-react-master/src/layouts/RTL/RTL.js":"4","/home/maher/Desktop/black-dashboard-react-master/src/layouts/Admin/Admin.js":"5","/home/maher/Desktop/black-dashboard-react-master/src/contexts/ThemeContext.js":"6","/home/maher/Desktop/black-dashboard-react-master/src/contexts/BackgroundColorContext.js":"7","/home/maher/Desktop/black-dashboard-react-master/src/routes.js":"8","/home/maher/Desktop/black-dashboard-react-master/src/components/Navbars/RTLNavbar.js":"9","/home/maher/Desktop/black-dashboard-react-master/src/components/Footer/Footer.js":"10","/home/maher/Desktop/black-dashboard-react-master/src/components/Navbars/AdminNavbar.js":"11","/home/maher/Desktop/black-dashboard-react-master/src/components/Sidebar/Sidebar.js":"12","/home/maher/Desktop/black-dashboard-react-master/src/components/FixedPlugin/FixedPlugin.js":"13","/home/maher/Desktop/black-dashboard-react-master/src/views/Map.js":"14","/home/maher/Desktop/black-dashboard-react-master/src/views/Notifications.js":"15","/home/maher/Desktop/black-dashboard-react-master/src/views/Typography.js":"16","/home/maher/Desktop/black-dashboard-react-master/src/views/Dashboard.js":"17","/home/maher/Desktop/black-dashboard-react-master/src/views/Rtl.js":"18","/home/maher/Desktop/black-dashboard-react-master/src/variables/charts.js":"19","/home/maher/Desktop/black-dashboard-react-master/src/views/Employees.js":"20","/home/maher/Desktop/black-dashboard-react-master/src/views/TeamsList.js":"21","/home/maher/Desktop/black-dashboard-react-master/src/views/ProjectsList.js":"22","/home/maher/Desktop/black-dashboard-react-master/src/views/KPIS.js":"23","/home/maher/Desktop/black-dashboard-react-master/src/views/Reports.js":"24","/home/maher/Desktop/black-dashboard-react-master/src/views/CreateUser.js":"25","/home/maher/Desktop/black-dashboard-react-master/src/views/UserProfile.js":"26","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/index.js":"27","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/ThemeWrapper/ThemeWrapper.js":"28","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js":"29","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/layouts/Admin/Admin.js":"30","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/layouts/RTL/RTL.js":"31","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/contexts/ThemeContext.js":"32","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/contexts/BackgroundColorContext.js":"33","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/routes.js":"34","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/Footer/Footer.js":"35","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/FixedPlugin/FixedPlugin.js":"36","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/Sidebar/Sidebar.js":"37","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/Navbars/AdminNavbar.js":"38","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/Navbars/RTLNavbar.js":"39","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/CreateUser.js":"40","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/Dashboard.js":"41","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/UserProfile.js":"42","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/Employees.js":"43","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/KPIS.js":"44","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/ProjectsList.js":"45","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/Reports.js":"46","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/TeamsList.js":"47","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/variables/charts.js":"48","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/EmployeeProjects.js":"49"},{"size":1034,"mtime":1610175639289,"results":"50","hashOfConfig":"51"},{"size":495,"mtime":1607696334000,"results":"52","hashOfConfig":"51"},{"size":695,"mtime":1607696334000,"results":"53","hashOfConfig":"51"},{"size":4935,"mtime":1609893271388,"results":"54","hashOfConfig":"51"},{"size":3854,"mtime":1610510545493,"results":"55","hashOfConfig":"51"},{"size":201,"mtime":1607696334000,"results":"56","hashOfConfig":"51"},{"size":254,"mtime":1607696334000,"results":"57","hashOfConfig":"51"},{"size":1513,"mtime":1610509224752,"results":"58","hashOfConfig":"51"},{"size":6331,"mtime":1609893428374,"results":"59","hashOfConfig":"51"},{"size":634,"mtime":1610510359844,"results":"60","hashOfConfig":"51"},{"size":5332,"mtime":1610510398248,"results":"61","hashOfConfig":"51"},{"size":4484,"mtime":1610510479325,"results":"62","hashOfConfig":"51"},{"size":2600,"mtime":1610510345839,"results":"63","hashOfConfig":"51"},{"size":6936,"mtime":1609891758228,"results":"64","hashOfConfig":"51"},{"size":7442,"mtime":1609891762196,"results":"65","hashOfConfig":"51"},{"size":8519,"mtime":1607696334000,"results":"66","hashOfConfig":"51"},{"size":9495,"mtime":1610534831926,"results":"67","hashOfConfig":"51"},{"size":21778,"mtime":1609891763656,"results":"68","hashOfConfig":"51"},{"size":10910,"mtime":1607696334000,"results":"69","hashOfConfig":"51"},{"size":2363,"mtime":1610534653080,"results":"70","hashOfConfig":"51"},{"size":3132,"mtime":1610534680021,"results":"71","hashOfConfig":"51"},{"size":3341,"mtime":1610534668301,"results":"72","hashOfConfig":"51"},{"size":2651,"mtime":1610510658815,"results":"73","hashOfConfig":"51"},{"size":5213,"mtime":1610510783140,"results":"74","hashOfConfig":"51"},{"size":7291,"mtime":1610534635244,"results":"75","hashOfConfig":"51"},{"size":13038,"mtime":1610537762847,"results":"76","hashOfConfig":"51"},{"size":1034,"mtime":1610543303470,"results":"77","hashOfConfig":"78"},{"size":695,"mtime":1610543303470,"results":"79","hashOfConfig":"78"},{"size":495,"mtime":1610543303470,"results":"80","hashOfConfig":"78"},{"size":3854,"mtime":1610610925531,"results":"81","hashOfConfig":"78"},{"size":4935,"mtime":1610543303470,"results":"82","hashOfConfig":"78"},{"size":201,"mtime":1610543303470,"results":"83","hashOfConfig":"78"},{"size":254,"mtime":1610543303470,"results":"84","hashOfConfig":"78"},{"size":1513,"mtime":1610915579247,"results":"85","hashOfConfig":"78"},{"size":634,"mtime":1610543303470,"results":"86","hashOfConfig":"78"},{"size":2600,"mtime":1610543303470,"results":"87","hashOfConfig":"78"},{"size":4484,"mtime":1610543303470,"results":"88","hashOfConfig":"78"},{"size":5332,"mtime":1610543303470,"results":"89","hashOfConfig":"78"},{"size":6331,"mtime":1610543303470,"results":"90","hashOfConfig":"78"},{"size":7289,"mtime":1610905515728,"results":"91","hashOfConfig":"78"},{"size":9495,"mtime":1610713345858,"results":"92","hashOfConfig":"78"},{"size":13903,"mtime":1610917997302,"results":"93","hashOfConfig":"78"},{"size":2552,"mtime":1610913675029,"results":"94","hashOfConfig":"78"},{"size":6486,"mtime":1610919755958,"results":"95","hashOfConfig":"78"},{"size":3159,"mtime":1610905039637,"results":"96","hashOfConfig":"78"},{"size":2923,"mtime":1610923889549,"results":"97","hashOfConfig":"78"},{"size":3117,"mtime":1610905010365,"results":"98","hashOfConfig":"78"},{"size":10910,"mtime":1610543303470,"results":"99","hashOfConfig":"78"},{"size":2294,"mtime":1610928825193,"results":"100","hashOfConfig":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"18890dk",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"103"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"103"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"103"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"13l1ev1",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"160"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"160"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"160"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"160"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"160"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"160"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"160"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"210","messages":"211","errorCount":8,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/maher/Desktop/black-dashboard-react-master/src/index.js",[],["212","213"],"/home/maher/Desktop/black-dashboard-react-master/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/components/ThemeWrapper/ThemeWrapper.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/layouts/RTL/RTL.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/layouts/Admin/Admin.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/contexts/ThemeContext.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/contexts/BackgroundColorContext.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/routes.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/components/Navbars/RTLNavbar.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/components/Footer/Footer.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/components/Navbars/AdminNavbar.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/components/Sidebar/Sidebar.js",["214","215"],"import React from \"react\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Sidebar(props) {\n  const location = useLocation();\n  const sidebarRef = React.useRef(null);\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebarRef.current, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n\n  const { routes, rtlActive, logo } = props;\n  let logoImg = null;\n  let logoText = null;\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = (\n        <a\n          href={logo.outterLink}\n          rel=\"noreferrer\"\n          className=\"simple-text logo-mini\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </a>\n      );\n      logoText = (\n        <a\n          href={logo.outterLink}\n          rel=\"noreferrer\"\n          className=\"simple-text logo-normal\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </a>\n      );\n    } else {\n      logoImg = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-mini\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </Link>\n      );\n      logoText = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-normal\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </Link>\n      );\n    }\n  }\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <div className=\"sidebar\" data={color}>\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\n            {logoImg !== null || logoText !== null ? (\n              <div className=\"logo\">\n                {logoImg}\n                {logoText}\n              </div>\n            ) : null}\n            <Nav>\n              {routes.map((prop, key) => {\n                if (prop.redirect) return null;\n                return (\n                  <li\n                    className={\n                      activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                      onClick={props.toggleSidebar}\n                    >\n                      <i className={prop.icon} />\n                      <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                    </NavLink>\n                  </li>\n                );\n              })}\n            </Nav>\n          </div>\n        </div>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","/home/maher/Desktop/black-dashboard-react-master/src/components/FixedPlugin/FixedPlugin.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/views/Map.js",[],["216","217"],"/home/maher/Desktop/black-dashboard-react-master/src/views/Notifications.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/views/Typography.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/views/Dashboard.js",["218","219"],"/home/maher/Desktop/black-dashboard-react-master/src/views/Rtl.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/variables/charts.js",[],"/home/maher/Desktop/black-dashboard-react-master/src/views/Employees.js",["220"],"/home/maher/Desktop/black-dashboard-react-master/src/views/TeamsList.js",["221"],"/home/maher/Desktop/black-dashboard-react-master/src/views/ProjectsList.js",["222"],"/home/maher/Desktop/black-dashboard-react-master/src/views/KPIS.js",["223"],"import React from 'react'\n\nimport {\n     Button,\n     Card,\n     CardHeader,\n     CardBody,\n     CardFooter,\n     Table,\n     CardText,\n     FormGroup,\n     Form,\n     Input,\n     Row,\n     Col,\n} from \"reactstrap\";\n\nfunction KPIS() {\n     return (\n          <div className=\"content\">\n               <Row>\n                    <Col md=\"8\">\n                         <Card>\n                              <CardHeader>\n                                   <h3 className=\"title\">Key Performance Metrics</h3>\n                              </CardHeader>\n                              <CardBody>\n                                   <Form>\n                                        <Row>\n                                             <Col className=\"pr-md-1\" md=\"5\">\n                                                  <FormGroup>\n                                                       <label>New</label>\n                                                       <Input\n                                                            placeholder=\"add kpi...\"\n                                                            type=\"text\"\n                                                       />\n                                                  </FormGroup>\n                                             </Col>\n                                        </Row>\n                                   </Form>\n                              </CardBody>\n                              <CardFooter>\n                                   <Button className=\"btn-fill\" color=\"secondary\" type=\"submit\">\n                                        Add New\n                                   </Button>\n                              </CardFooter>\n                         </Card>\n                    </Col>\n               </Row>\n               <Table className=\"tablesorter\" responsive>\n                    <thead className=\"text-primary\">\n                         <tr>\n                              <th>KPI Name</th>\n                              <th>Min</th>\n                              <th>Max</th>\n                         </tr>\n                    </thead>\n                    <tbody>\n                         <tr>\n                              <td>Performance</td>\n                              <td>1</td>\n                              <td>5</td>\n                         </tr>\n                         <tr>\n                              <td>Github</td>\n                              <td>1</td>\n                              <td>5</td>\n                         </tr>\n                         <tr></tr>\n                    </tbody>\n               </Table>\n          </div>\n     )\n}\n\nexport default KPIS\n","/home/maher/Desktop/black-dashboard-react-master/src/views/Reports.js",["224"],"import React, { useState } from 'react'\n\nimport {\n     Button,\n     Card,\n     CardHeader,\n     CardBody,\n     CardFooter,\n     Table,\n     CardText,\n     FormGroup,\n     Form,\n     Input,\n     Row,\n     Col,\n     Dropdown,\n     DropdownToggle,\n     DropdownMenu,\n     DropdownItem\n} from \"reactstrap\";\n\nfunction KPIS() {\n     const [dropdownOpen, setDropdownOpen] = useState(false);\n\n     const toggle = () => setDropdownOpen(prevState => !prevState);\n\n     return (\n          <div className=\"content\">\n               <Row>\n                    <Col md=\"8\">\n                         <Card>\n                              <CardHeader>\n                                   <h3 className=\"title\">Company Reports</h3>\n                              </CardHeader>\n                              <CardBody>\n                                   <Form>\n                                        <Row>\n                                             <Col className=\"pr-md-1\" md=\"5\">\n                                                  <FormGroup>\n                                                       <label>New</label>\n                                                       <Input\n                                                            placeholder=\"Report Name\"\n                                                            type=\"text\"\n                                                       />\n                                                       <label>Fields</label>\n                                                       <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                                                            <DropdownToggle caret>\n                                                                 Select Field\n                                                            </DropdownToggle>\n                                                            <DropdownMenu>\n                                                                 <DropdownItem header>Employees</DropdownItem>\n                                                                 <DropdownItem divider />\n                                                                 <DropdownItem>Employee Name</DropdownItem>\n                                                                 <DropdownItem>Employee Start Date</DropdownItem>\n                                                                 <DropdownItem>Employee Position</DropdownItem>\n                                                                 <DropdownItem header>KPIs</DropdownItem>\n                                                                 <DropdownItem divider />\n                                                                 <DropdownItem>Performance</DropdownItem>\n                                                                 <DropdownItem>Github</DropdownItem>\n                                                                 <DropdownItem>Whatever</DropdownItem>\n                                                                 <DropdownItem header>Department</DropdownItem>\n                                                                 <DropdownItem divider />\n                                                                 <DropdownItem>Marketing</DropdownItem>\n                                                                 <DropdownItem>Development</DropdownItem>\n                                                                 <DropdownItem>Finance</DropdownItem>\n                                                            </DropdownMenu>\n                                                            <Button className=\"bg-info clearfix\" style={{ padding: '.5rem', margin: '.5rem' }}>+</Button>\n                                                       </Dropdown>\n                                                  </FormGroup>\n                                             </Col>\n                                        </Row>\n                                   </Form>\n                              </CardBody>\n                              <CardFooter>\n                                   <Button className=\"btn-fill\" color=\"secondary\" type=\"submit\">\n                                        Run Report\n                                   </Button>\n                              </CardFooter>\n                         </Card>\n                    </Col>\n               </Row>\n               <Table className=\"tablesorter\" responsive>\n                    <thead className=\"text-primary\">\n                         <tr>\n                              <th>KPI Name</th>\n                              <th>Min</th>\n                              <th>Max</th>\n                         </tr>\n                    </thead>\n                    <tbody>\n                         <tr>\n                              <td>Performance</td>\n                              <td>1</td>\n                              <td>5</td>\n                         </tr>\n                         <tr>\n                              <td>Github</td>\n                              <td>1</td>\n                              <td>5</td>\n                         </tr>\n                         <tr></tr>\n                    </tbody>\n               </Table>\n          </div>\n     )\n}\n\nexport default KPIS\n","/home/maher/Desktop/black-dashboard-react-master/src/views/CreateUser.js",["225"],"/home/maher/Desktop/black-dashboard-react-master/src/views/UserProfile.js",[],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/index.js",[],["226","227"],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/ThemeWrapper/ThemeWrapper.js",[],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js",[],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/layouts/Admin/Admin.js",[],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/layouts/RTL/RTL.js",[],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/contexts/ThemeContext.js",[],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/contexts/BackgroundColorContext.js",[],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/routes.js",[],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/Footer/Footer.js",[],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/FixedPlugin/FixedPlugin.js",[],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/Sidebar/Sidebar.js",["228","229"],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/Navbars/AdminNavbar.js",[],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/Navbars/RTLNavbar.js",[],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/CreateUser.js",["230"],"import React, { useEffect, useState } from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction CreateUser() {\n\n  const [employee, setEmployee] = useState([]);\n\n  const getEmployees = async () => {\n    await fetch(\"http://localhost:8000/api/employees\", {\n      method: 'GET',\n      headers: { 'Authorization': 'bearer ' + 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9sb2dpbiIsImlhdCI6MTYxMDYwOTEwNiwiZXhwIjoxNjEwNjEyNzA2LCJuYmYiOjE2MTA2MDkxMDYsImp0aSI6InR1TVoybWV3VDB0azZWWTAiLCJzdWIiOjEsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.jar0pT7w82jM5cADoH9rCZmUBq_8-1jVDu7O5a9czlo' }\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setEmployee(result);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  console.log(employee)\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"8\">\n            <Card>\n              <CardHeader>\n                <h3 className=\"title\">Add New Staff Member</h3>\n              </CardHeader>\n              <CardBody>\n                <Form>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"5\">\n                      <FormGroup>\n                        <label>Department</label>\n                        <Input\n                          placeholder=\"department\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"px-md-1\" md=\"3\">\n                      <FormGroup>\n                        <label>Username</label>\n                        <Input\n                          placeholder=\"Username\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label htmlFor=\"exampleInputEmail1\">\n                          Email address\n                        </label>\n                        <Input placeholder=\"mhalawi@email.com\" type=\"email\" />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label>First Name</label>\n                        <Input\n                          placeholder=\"Name\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-md-1\" md=\"6\">\n                      <FormGroup>\n                        <label>Last Name</label>\n                        <Input\n                          placeholder=\"Last Name\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"12\">\n                      <FormGroup>\n                        <label>Address</label>\n                        <Input\n                          placeholder=\"Home Address\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label>City</label>\n                        <Input\n                          placeholder=\"City\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"px-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label>Country</label>\n                        <Input\n                          placeholder=\"Country\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"pl-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label>Postal Code</label>\n                        <Input placeholder=\"ZIP Code\" type=\"number\" />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label>Team 1</label>\n                        <Input\n                          placeholder=\"Team\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"px-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label>Team 2</label>\n                        <Input\n                          placeholder=\"Team\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label>Project</label>\n                        <Input\n                          placeholder=\"Project\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col className=\"px-md-1\" md=\"4\">\n                      <FormGroup>\n                        <label>Manager</label>\n                        <Input\n                          placeholder=\"Manager\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md=\"8\">\n                    </Col>\n                  </Row>\n                </Form>\n              </CardBody>\n              <CardFooter>\n                <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\n                  Save\n                </Button>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card className=\"card-user\">\n              <CardBody>\n                <CardText />\n                <div className=\"author\">\n                  <div className=\"block block-one\" />\n                  <div className=\"block block-two\" />\n                  <div className=\"block block-three\" />\n                  <div className=\"block block-four\" />\n                  <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                    <img\n                      alt=\"...\"\n                      className=\"avatar\"\n                      src={require(\"assets/img/avatar.webp\").default}\n                    />\n                    <h5 className=\"title\">Maher Halawi</h5>\n                  </a>\n                  <p className=\"description\">Lead Dev</p>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default CreateUser;\n","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/Dashboard.js",["231","232"],"import React, { useEffect, useState } from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartExample1,\n  chartExample2,\n  chartExample3,\n  chartExample4,\n} from \"variables/charts.js\";\n\nfunction Dashboard(props) {\n  const [bigChartData, setbigChartData] = React.useState(\"data1\");\n  const setBgChartData = (name) => {\n    setbigChartData(name);\n  };\n\n  const [team, setTeam] = useState([]);\n\n  const getTeams = () => {\n    fetch(\"http://localhost:8000/api/teams\", {\n      method: 'GET',\n      headers: { 'Authorization': 'bearer ' + 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9sb2dpbiIsImlhdCI6MTYxMDcxMzI3OSwiZXhwIjoxNjEwNzE2ODc5LCJuYmYiOjE2MTA3MTMyNzksImp0aSI6IkFxbFU2c2ZBNmU1WU9RYTgiLCJzdWIiOjEsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.gMVjvzsIRnVc-xxGhpfzIce_DxMZ2C6j0IIZgoqrUY0' }\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setTeam(result);\n          // console.log('teams', result);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  const [project, setProject] = useState([]);\n\n  const getProjects = () => {\n    fetch(\"http://localhost:8000/api/projects\", {\n      method: 'GET',\n      headers: { 'Authorization': 'bearer ' + 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9sb2dpbiIsImlhdCI6MTYxMDcxMzI3OSwiZXhwIjoxNjEwNzE2ODc5LCJuYmYiOjE2MTA3MTMyNzksImp0aSI6IkFxbFU2c2ZBNmU1WU9RYTgiLCJzdWIiOjEsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.gMVjvzsIRnVc-xxGhpfzIce_DxMZ2C6j0IIZgoqrUY0' }\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setProject(result);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n  useEffect(() => {\n    getTeams();\n    getProjects();\n  }, []);\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col xs=\"12\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <h5 className=\"card-category\">Employee OverView</h5>\n                    <CardTitle tag=\"h2\">Performance</CardTitle>\n                  </Col>\n                  <Col sm=\"6\">\n                    <ButtonGroup\n                      className=\"btn-group-toggle float-right\"\n                      data-toggle=\"buttons\"\n                    >\n                      <Button\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data1\",\n                        })}\n                        color=\"info\"\n                        id=\"0\"\n                        size=\"sm\"\n                        onClick={() => setBgChartData(\"data1\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Employees\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-single-02\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"1\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data2\",\n                        })}\n                        onClick={() => setBgChartData(\"data2\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Teams\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-gift-2\" />\n                        </span>\n                      </Button>\n                      <Button\n                        color=\"info\"\n                        id=\"2\"\n                        size=\"sm\"\n                        tag=\"label\"\n                        className={classNames(\"btn-simple\", {\n                          active: bigChartData === \"data3\",\n                        })}\n                        onClick={() => setBgChartData(\"data3\")}\n                      >\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                          Projects\n                        </span>\n                        <span className=\"d-block d-sm-none\">\n                          <i className=\"tim-icons icon-tap-02\" />\n                        </span>\n                      </Button>\n                    </ButtonGroup>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample1[bigChartData]}\n                    options={chartExample1.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Total Tasks Completed</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-bell-55 text-info\" /> 763\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample2.data}\n                    options={chartExample2.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Daily Tasks</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-delivery-fast text-primary\" />{\" \"}\n                  35\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Bar\n                    data={chartExample3.data}\n                    options={chartExample3.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Completed Tasks</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-send text-success\" /> 1,210\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={chartExample4.data}\n                    options={chartExample4.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"6\" md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Teams</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Name</th>\n                      <th>Assigned Staff</th>\n                      <th>Active Tasks</th>\n                      <th className=\"text-center\">Budget</th>\n                    </tr>\n                  </thead>\n                  {team.map((post) =>\n                    <tbody>\n                      <tr>\n                        <td>{post.name}</td>\n                        <td>1 | 2</td>\n                        <td>14</td>\n                        <td className=\"text-center\">$36,738</td>\n                      </tr>\n                    </tbody>\n                  )}\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"6\" md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Projects</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Name</th>\n                      <th>Teams</th>\n                      <th>Active Tasks</th>\n                      <th className=\"text-center\">Budget</th>\n                    </tr>\n                  </thead>\n                  {project.map((post) =>\n                    <tbody>\n                      <tr>\n                        <td>{post.name}</td>\n                        <td>1 | 2</td>\n                        <td>14</td>\n                        <td className=\"text-center\">$36,738</td>\n                      </tr>\n                    </tbody>\n                  )}\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/UserProfile.js",["233"],"import React, { useEffect, useState } from \"react\";\n\n// reactstrap components\nimport {\n     Button,\n     Card,\n     CardHeader,\n     CardBody,\n     CardFooter,\n     CardText,\n     FormGroup,\n     Form,\n     Input,\n     Row,\n     Col,\n} from \"reactstrap\";\n\nfunction UserProfile() {\n     \n     const [employee, setEmployee] = useState({employee: '', team: [], project: []});\n     \n     const getEmployees = async () => {\n          const piece = window.document.location.pathname;\n          const id = piece.split(\"/\")[3]\n          let url = 'http://localhost:8000/api/employees/'\n          url += id\n       await fetch(url, {\n         method: 'GET',\n         headers: { 'Authorization': 'bearer ' + 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9sb2dpbiIsImlhdCI6MTYxMDcxMzI3OSwiZXhwIjoxNjEwNzE2ODc5LCJuYmYiOjE2MTA3MTMyNzksImp0aSI6IkFxbFU2c2ZBNmU1WU9RYTgiLCJzdWIiOjEsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.gMVjvzsIRnVc-xxGhpfzIce_DxMZ2C6j0IIZgoqrUY0' }\n       })\n         .then((res) => res.json())\n         .then(\n           (result) => {\n             setEmployee(result);\n           },\n           (error) => {\n             console.log(error);\n           }\n         );\n     };\n\n     useEffect(() => {\n       getEmployees();\n     }, []);\n\n\n     return (\n          <>\n               <div className=\"content\">\n                    <Row>\n                         <Col md=\"8\">\n                              <Card>\n                                   <CardHeader>\n                                        <h3 className=\"title\">Member Profile</h3>\n                                   </CardHeader>\n                                   <CardBody>\n                                        <Form>\n                                             <Row>\n                                                  <Col className=\"pr-md-1\" md=\"5\">\n                                                       <FormGroup>\n                                                            <label>First Name</label>\n                                                            <Input\n                                                                 className=\"text-white\"\n                                                                 placeholder=\"First Name\"\n                                                                 type=\"text\"\n                                                                 value={employee.employee.first_name}               \n                                                                 disabled                                                  \n                                                            />\n                                                       </FormGroup>\n                                                  </Col>\n                                                  <Col className=\"pr-md-1\" md=\"5\">\n                                                       <FormGroup>\n                                                            <label>Last Name</label>\n                                                            <Input\n                                                                 className=\"text-white\"\n                                                                 placeholder=\"Last Name\"\n                                                                 type=\"text\"\n                                                                 value={employee.employee.last_name}       \n                                                                 disabled                                                          \n                                                            />\n                                                       </FormGroup>\n                                                  </Col>\n                                                  <Col className=\"px-md-1\" md=\"3\">\n                                                       <FormGroup>\n                                                            <label>Username</label>\n                                                            <Input className=\"text-white\"\n                                                                 placeholder=\"Username\"\n                                                                 type=\"text\"\n                                                                 value={employee.employee.username}   \n                                                                 disabled                                                              \n                                                            />\n                                                       </FormGroup>\n                                                  </Col>\n                                                  <Col className=\"pl-md-1\" md=\"4\">\n                                                       <FormGroup>\n                                                            <label htmlFor=\"exampleInputEmail1\">\n                                                                 Email address\n                        </label>\n                                                            <Input className=\"text-white\" placeholder=\"mhalawi@email.com\" type=\"email\" value={employee.employee.email} disabled/>\n                                                       </FormGroup>\n                                                  </Col>\n                                             </Row>\n                                             <Row>\n                                                  <Col md=\"12\">\n                                                       <FormGroup>\n                                                            <label>Address</label>\n                                                            <Input className=\"text-white\"\n                                                                 placeholder=\"Home Address\"\n                                                                 type=\"text\"\n                                                                 value={employee.employee.address}                 \n                                                                 disabled                                                \n                                                            />\n                                                       </FormGroup>\n                                                  </Col>\n                                             </Row>\n                                             <Row>\n                                                  <Col className=\"pr-md-1\" md=\"4\">\n                                                       <FormGroup>\n                                                            <label>City</label>\n                                                            <Input className=\"text-white\"\n                                                                 placeholder=\"City\"\n                                                                 type=\"text\"\n                                                                 value={employee.employee.city}               \n                                                                 disabled                                                  \n                                                            />\n                                                       </FormGroup>\n                                                  </Col>\n                                                  <Col className=\"px-md-1\" md=\"4\">\n                                                       <FormGroup>\n                                                            <label>Country</label>\n                                                            <Input className=\"text-white\"\n                                                                 placeholder=\"Country\"\n                                                                 type=\"text\"\n                                                                 value={employee.employee.country}          \n                                                                 disabled                                                       \n                                                            />\n                                                       </FormGroup>\n                                                  </Col>\n                                                  <Col className=\"pl-md-1\" md=\"4\">\n                                                       <FormGroup>\n                                                            <label>Phone</label>\n                                                            <Input className=\"text-white\" placeholder=\"phone\" type=\"number\" value={employee.employee.phone} disabled/>\n                                                       </FormGroup>\n                                                  </Col>\n                                             </Row>\n                                             <Row>\n                                                  <Col className=\"pr-md-1\" md=\"4\">\n                                                       <FormGroup>\n                                                            <label>Team</label>\n                                                            {employee.team.map((item, key) =>\n                                                            <Input \n                                                                 key={key}\n                                                                 className=\"text-white\"\n                                                                 placeholder=\"Team\"\n                                                                 type=\"text\"\n                                                                 value= {item.name}        \n                                                                 disabled                                                     \n                                                            />\n                                                            )}  \n                                                       </FormGroup>\n                                                  </Col>\n                                                  <Col className=\"px-md-1\" md=\"4\">\n                                                       <FormGroup>\n                                                            <label>Project</label>\n                                                            {employee.project.map((item, key) =>\n                                                            <Input \n                                                                 key={key}\n                                                                 className=\"text-white\"\n                                                                 placeholder=\"Project\"\n                                                                 type=\"text\"\n                                                                 value= {item.name}       \n                                                                 disabled                                                   \n                                                            />\n                                                            )}  \n                                                       </FormGroup>\n                                                  </Col>\n                                             </Row>\n                                             <Row>\n                                                  <Col md=\"8\">\n                                                  </Col>\n                                             </Row>\n                                        </Form>\n                                   </CardBody>\n                              </Card>\n                         </Col>\n                         <Col md=\"4\">\n                              <Card className=\"card-user\">\n                                   <CardBody>\n                                        <CardText />\n                                        <div className=\"author\">\n                                             <div className=\"block block-one\" />\n                                             <div className=\"block block-two\" />\n                                             <div className=\"block block-three\" />\n                                             <div className=\"block block-four\" />\n                                                  <img\n                                                       alt=\"user avatar\"\n                                                       className=\"avatar\"\n                                                       src={`http://localhost:8000/storage/${employee.employee.image_path}`}\n                                                  />\n                                        </div>\n                                   </CardBody>\n                                   <CardFooter>\n                                        <div className=\"button-container\">\n                                             <Button className=\"btn-icon btn-round\" color=\"twitter\">\n                                                  <i className=\"fas fa-chart-bar\"></i>\n                                             </Button>\n                                             <Button className=\"btn-icon btn-round\" color=\"twitter\">\n                                                  <i className=\"fas fa-info-circle\"></i>\n                                             </Button>\n                                             <Button className=\"btn-icon btn-round\" color=\"twitter\">\n                                                  <i className=\"fas fa-users-cog\"></i>\n                                             </Button>\n                                        </div>\n                                   </CardFooter>\n                              </Card>\n                         </Col>\n                    </Row>\n               </div>\n          </>\n     );\n}\n\nexport default UserProfile;\n","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/Employees.js",["234"],"import React from \"react\";\nimport { useEffect, useState } from 'react';\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, Row, Col, Button } from \"reactstrap\";\n\nfunction Employees() {\n\n  const [employee, setEmployee] = useState([]);\n\n  const getEmployees = async () => {\n    await fetch(\"http://localhost:8000/api/employees\", {\n      method: 'GET',\n      headers: { 'Authorization': 'bearer ' + 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9sb2dpbiIsImlhdCI6MTYxMDcxMzI3OSwiZXhwIjoxNjEwNzE2ODc5LCJuYmYiOjE2MTA3MTMyNzksImp0aSI6IkFxbFU2c2ZBNmU1WU9RYTgiLCJzdWIiOjEsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.gMVjvzsIRnVc-xxGhpfzIce_DxMZ2C6j0IIZgoqrUY0' }\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setEmployee(result);\n          // console.log(result)\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  console.log(employee)\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <h3 className=\"title\">All Employees</h3>\n                <h5 className=\"category\">\n                  Click on employee card for more info\n                </h5>\n              </CardHeader>\n              <CardBody className=\"all-icons\">\n                <Row>\n                  {employee.map((post, key) =>\n                    <Col\n                     key={key}\n                      className=\"font-icon-list col-xs-6 col-xs-6\"\n                      lg=\"2\"\n                      md=\"3\"\n                      sm=\"4\"\n                    >\n                      <div className=\"font-icon-detail\">\n                        <img\n                          alt=\"...\"\n                          className=\"avatar\"\n                          src={`http://localhost:8000/storage/${post.employee.image_path}`}\n                        />\n                        <a href= {`/admin/profile/${post.employee.id}`}>\n                          <p>{post.employee.first_name}  {post.employee.last_name} </p>\n                      </a>\n                      </div>\n                    </Col>\n                  )}\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Button className='mr-5 ml-5' outline color=\"primary\" size=\"md\">\n          New Staff Member\n                </Button>\n      </div>\n    </>\n  );\n}\n\nexport default Employees;\n","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/KPIS.js",["235","236","237","238","239"],"import React, {\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport axios from 'axios';\n\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Table,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from 'reactstrap';\n\nfunction KPIS(props) {\n\n  \n  const [kpi, setKPI] = useState([]);\n  const [newKpi, addKPI] = useState({});\n  const [oldKpi, removeKPI] = useState([]);\n\n  const getKPI = () => {\n    fetch('http://localhost:8000/api/kpis', {\n      method: 'GET',\n      headers: {\n        Authorization:\n          'bearer ' +\n          'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9sb2dpbiIsImlhdCI6MTYxMDcxMzI3OSwiZXhwIjoxNjEwNzE2ODc5LCJuYmYiOjE2MTA3MTMyNzksImp0aSI6IkFxbFU2c2ZBNmU1WU9RYTgiLCJzdWIiOjEsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.gMVjvzsIRnVc-xxGhpfzIce_DxMZ2C6j0IIZgoqrUY0',\n      },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setKPI(result.sort((a,b) => a.created - b.created) );\n          console.log(result)\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  const addKpi = (e) => {\n    e.preventDefault();\n    fetch('http://localhost:8000/api/kpis', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization:\n          'bearer ' +\n          'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9sb2dpbiIsImlhdCI6MTYxMDcxMzI3OSwiZXhwIjoxNjEwNzE2ODc5LCJuYmYiOjE2MTA3MTMyNzksImp0aSI6IkFxbFU2c2ZBNmU1WU9RYTgiLCJzdWIiOjEsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.gMVjvzsIRnVc-xxGhpfzIce_DxMZ2C6j0IIZgoqrUY0',\n      },\n      body: JSON.stringify({...newKpi }),\n    }).then((result) => {\n      window.location.reload();\n    });\n  };\n  const onChange = (e) => {\n    e.persist();\n    addKPI({\n      ...newKpi,\n      [e.target.name]: e.target.value,\n  });\n  };\n\n  const deleteKPI = (id) => {\n    fetch(\n      `http://localhost:8000/api/kpis/${id}`,\n      {\n        method: 'DELETE',\n        headers: {\n          Authorization:\n            'bearer ' +\n            'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9sb2dpbiIsImlhdCI6MTYxMDcxMzI3OSwiZXhwIjoxNjEwNzE2ODc5LCJuYmYiOjE2MTA3MTMyNzksImp0aSI6IkFxbFU2c2ZBNmU1WU9RYTgiLCJzdWIiOjEsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.gMVjvzsIRnVc-xxGhpfzIce_DxMZ2C6j0IIZgoqrUY0',\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          removeKPI(result);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  useEffect(() => {\n    getKPI();\n  }, []);\n\n\n  return (\n    <div className='content'>\n      <Row>\n        <Col md='8'>\n          <Card>\n            <CardHeader>\n              <h3 className='title'>\n                Key Performance Metrics\n              </h3>\n              <Row>\n                <CardHeader>\n                  <Button\n                    className='btn-fill'\n                    color='secondary'\n                    type='submit'\n                    onClick={addKpi}\n                  >\n                    Add New\n                  </Button>\n                </CardHeader>\n              </Row>\n            </CardHeader>\n            <CardBody>\n              <Form>\n                <Row>\n                  <Col className='pr-md-1' md='5'>\n                    <FormGroup>\n                      <label>Name</label>\n                      <Input\n                        placeholder='KPI Name'\n                        type='text'\n                        name='name'\n                        value={newKpi.name}\n                        onChange= {onChange}\n                      />\n                      <label>Minimum Value</label>\n                      <Input\n                        placeholder='0, 1....'\n                        type='number'\n                        name='min_value'\n                        min='1'\n                        value={newKpi.min_value}\n                        onChange= {onChange}\n                      />\n                      <label>Maximum Value</label>\n                      <Input\n                        placeholder='5, 10...'\n                        type='number'\n                        name='max_value'\n                        min='2'\n                        value={newKpi.max_value}\n                        onChange= {onChange}\n                      />\n                      <label>Description</label>\n                      <Input\n                        placeholder='Add a Description'\n                        type='text'\n                        name='description'\n                        value={newKpi.description}\n                        onChange= {onChange}\n                      />\n                                            <Input\n                        placeholder='Add a Description'\n                        type='text'\n                        name='employee_id'\n                        value={newKpi.employee_id}\n                        onChange= {onChange}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Table className='tablesorter' responsive>\n        <thead className='text-primary'>\n          <tr>\n            <th>KPI Name</th>\n            <th>Min</th>\n            <th>Max</th>\n            <th>Created On</th>\n            <th>Employee ID</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        {kpi.map((post, key) => (\n            <tbody key={key}>\n            {post.Kpi.map((item, key) =>\n              <tr key={key}>\n                <td> {item.name}</td>\n                <td>{item.min_value}</td>\n                <td>{item.max_value}</td>\n                <td>{item.created}</td>\n                <td>{item.employee_id}</td>\n                <td>\n                  <Button className='p-md-2' md='3' color='warning' type='submit' onClick={deleteKPI}>\n                    X\n                  </Button>\n                </td>\n                <td>\n                  <Button className='p-md-2' md='3' color='warning' type='submit'>\n                    Edit\n                  </Button>\n                </td>\n              </tr>\n            )}\n              <tr></tr>\n            </tbody>\n        ))}\n      </Table>\n    </div>\n  );\n}\n\nexport default KPIS;\n","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/ProjectsList.js",["240"],"import React from \"react\";\nimport { useEffect, useState } from 'react';\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  CardFooter,\n  Button\n} from \"reactstrap\";\n\nfunction Projects() {\n  const [project, setProject] = useState([]);\n\n  const getProjects = async () => {\n    await fetch(\"http://localhost:8000/api/projects\", {\n      method: 'GET',\n      headers: { 'Authorization': 'bearer ' + 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9sb2dpbiIsImlhdCI6MTYxMDcxMzI3OSwiZXhwIjoxNjEwNzE2ODc5LCJuYmYiOjE2MTA3MTMyNzksImp0aSI6IkFxbFU2c2ZBNmU1WU9RYTgiLCJzdWIiOjEsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.gMVjvzsIRnVc-xxGhpfzIce_DxMZ2C6j0IIZgoqrUY0' }\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setProject(result);\n          // console.log(result)\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n  useEffect(() => {\n    getProjects();\n  }, []);\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"8\">\n            <Card>\n              <CardHeader>\n                <h3 className=\"title\">Projects</h3>\n              </CardHeader>\n              <CardBody>\n                <Form>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"5\">\n                      <FormGroup>\n                        <label>New</label>\n                        <Input\n                          placeholder=\"add project...\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </Form>\n              </CardBody>\n              <CardFooter>\n                <Button className=\"btn-fill\" color=\"secondary\" type=\"submit\">\n                  Add New\n                                   </Button>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Team: MnM</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Project Name</th>\n                      <th>Team</th>\n                      <th>Role</th>\n                      <th className=\"text-center\">Manager</th>\n                    </tr>\n                  </thead>\n                  {project.map((post, key) =>\n                    <tbody key={post.id}>\n                      <tr>\n                        <td>{post.name}</td>\n                        {/* <td></td>\n                        <td>{post.role_id}</td>\n                        <td className=\"text-center\">{post.manager_id}</td> */}\n                      </tr>\n                    </tbody>\n                  )}\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Projects;\n","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/Reports.js",["241","242","243","244"],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/views/TeamsList.js",["245"],"import React from \"react\";\nimport { useEffect, useState } from 'react';\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  CardFooter,\n  Button\n} from \"reactstrap\";\n\nfunction Teams() {\n\n  const [team, setTeam] = useState([]);\n\n  const getTeams = () => {\n    fetch(\"http://localhost:8000/api/teams\", {\n      method: 'GET',\n      headers: { 'Authorization': 'bearer ' + 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9sb2dpbiIsImlhdCI6MTYxMDcxMzI3OSwiZXhwIjoxNjEwNzE2ODc5LCJuYmYiOjE2MTA3MTMyNzksImp0aSI6IkFxbFU2c2ZBNmU1WU9RYTgiLCJzdWIiOjEsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.gMVjvzsIRnVc-xxGhpfzIce_DxMZ2C6j0IIZgoqrUY0' }\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setTeam(result);\n          // console.log('teams', result);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n  useEffect(() => {\n    getTeams();\n  }, []);\n\n  console.log(team);\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col md=\"8\">\n            <Card>\n              <CardHeader>\n                <h3 className=\"title\">Teams</h3>\n              </CardHeader>\n              <CardBody>\n                <Form>\n                  <Row>\n                    <Col className=\"pr-md-1\" md=\"5\">\n                      <FormGroup>\n                        <label>New</label>\n                        <Input\n                          placeholder=\"add team...\"\n                          type=\"text\"\n                        />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                </Form>\n              </CardBody>\n              <CardFooter>\n                <Button className=\"btn-fill\" color=\"secondary\" type=\"submit\">\n                  Add New\n                                   </Button>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Team: MnM</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Assigned Employees</th>\n                      <th>Project</th>\n                      <th>Role</th>\n                      <th className=\"text-center\">Manager</th>\n                    </tr>\n                  </thead>\n                  {team.map((post, key) =>\n                    <tbody key={post.id}>\n                      <tr>\n                        <td>{post.name}</td>\n                        <td></td>\n                        <td></td>\n                        <td className=\"text-center\"></td>\n                      </tr>\n                    </tbody>\n                  )}\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Teams;\n","/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/variables/charts.js",[],"/home/maher/Desktop/ERP-Web-Front-End/erp-web/src/components/EmployeeProjects.js",["246","247","248","249","250","251","252","253","254","255","256","257"],{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":10,"column":26,"nodeType":"264","messageId":"265","endLine":10,"endColumn":43},{"ruleId":"262","severity":1,"message":"266","line":13,"column":3,"nodeType":"264","messageId":"265","endLine":13,"endColumn":19},{"ruleId":"258","replacedBy":"267"},{"ruleId":"260","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":39,"column":45,"nodeType":"271","messageId":"272","endLine":39,"endColumn":46},{"ruleId":"269","severity":1,"message":"270","line":58,"column":45,"nodeType":"271","messageId":"272","endLine":58,"endColumn":46},{"ruleId":"269","severity":1,"message":"270","line":14,"column":45,"nodeType":"271","messageId":"272","endLine":14,"endColumn":46},{"ruleId":"269","severity":1,"message":"270","line":27,"column":45,"nodeType":"271","messageId":"272","endLine":27,"endColumn":46},{"ruleId":"269","severity":1,"message":"270","line":27,"column":45,"nodeType":"271","messageId":"272","endLine":27,"endColumn":46},{"ruleId":"262","severity":1,"message":"273","line":10,"column":6,"nodeType":"264","messageId":"265","endLine":10,"endColumn":14},{"ruleId":"262","severity":1,"message":"273","line":10,"column":6,"nodeType":"264","messageId":"265","endLine":10,"endColumn":14},{"ruleId":"269","severity":1,"message":"270","line":25,"column":45,"nodeType":"271","messageId":"272","endLine":25,"endColumn":46},{"ruleId":"258","replacedBy":"274"},{"ruleId":"260","replacedBy":"275"},{"ruleId":"262","severity":1,"message":"263","line":10,"column":26,"nodeType":"264","messageId":"265","endLine":10,"endColumn":43},{"ruleId":"262","severity":1,"message":"266","line":13,"column":3,"nodeType":"264","messageId":"265","endLine":13,"endColumn":19},{"ruleId":"269","severity":1,"message":"270","line":25,"column":45,"nodeType":"271","messageId":"272","endLine":25,"endColumn":46},{"ruleId":"269","severity":1,"message":"270","line":39,"column":45,"nodeType":"271","messageId":"272","endLine":39,"endColumn":46},{"ruleId":"269","severity":1,"message":"270","line":58,"column":45,"nodeType":"271","messageId":"272","endLine":58,"endColumn":46},{"ruleId":"269","severity":1,"message":"270","line":29,"column":48,"nodeType":"271","messageId":"272","endLine":29,"endColumn":49},{"ruleId":"269","severity":1,"message":"270","line":14,"column":45,"nodeType":"271","messageId":"272","endLine":14,"endColumn":46},{"ruleId":"262","severity":1,"message":"276","line":3,"column":3,"nodeType":"264","messageId":"265","endLine":3,"endColumn":9},{"ruleId":"262","severity":1,"message":"277","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":13},{"ruleId":"262","severity":1,"message":"278","line":13,"column":3,"nodeType":"264","messageId":"265","endLine":13,"endColumn":13},{"ruleId":"262","severity":1,"message":"273","line":15,"column":3,"nodeType":"264","messageId":"265","endLine":15,"endColumn":11},{"ruleId":"262","severity":1,"message":"279","line":28,"column":10,"nodeType":"264","messageId":"265","endLine":28,"endColumn":16},{"ruleId":"269","severity":1,"message":"270","line":26,"column":45,"nodeType":"271","messageId":"272","endLine":26,"endColumn":46},{"ruleId":"262","severity":1,"message":"278","line":9,"column":6,"nodeType":"264","messageId":"265","endLine":9,"endColumn":16},{"ruleId":"262","severity":1,"message":"280","line":10,"column":6,"nodeType":"264","messageId":"265","endLine":10,"endColumn":11},{"ruleId":"262","severity":1,"message":"273","line":11,"column":6,"nodeType":"264","messageId":"265","endLine":11,"endColumn":14},{"ruleId":"262","severity":1,"message":"281","line":14,"column":6,"nodeType":"264","messageId":"265","endLine":14,"endColumn":11},{"ruleId":"269","severity":1,"message":"270","line":27,"column":45,"nodeType":"271","messageId":"272","endLine":27,"endColumn":46},{"ruleId":"269","severity":1,"message":"270","line":11,"column":54,"nodeType":"271","messageId":"272","endLine":11,"endColumn":55},{"ruleId":"282","severity":1,"message":"283","line":48,"column":41,"nodeType":"284","messageId":"285","endLine":48,"endColumn":43},{"ruleId":"286","severity":2,"message":"287","line":49,"column":22,"nodeType":"288","messageId":"289","endLine":49,"endColumn":48},{"ruleId":"290","severity":2,"message":"291","line":49,"column":22,"nodeType":"264","messageId":"292","endLine":49,"endColumn":25},{"ruleId":"293","severity":1,"message":"294","line":49,"column":37,"nodeType":"271","messageId":"295","endLine":49,"endColumn":39},{"ruleId":"290","severity":2,"message":"291","line":49,"column":45,"nodeType":"264","messageId":"292","endLine":49,"endColumn":48},{"ruleId":"296","severity":1,"message":"297","line":50,"column":22,"nodeType":"298","messageId":"299","endLine":50,"endColumn":83},{"ruleId":"286","severity":2,"message":"287","line":50,"column":23,"nodeType":"288","messageId":"289","endLine":50,"endColumn":82},{"ruleId":"290","severity":2,"message":"300","line":50,"column":23,"nodeType":"264","messageId":"292","endLine":50,"endColumn":30},{"ruleId":"290","severity":2,"message":"301","line":50,"column":38,"nodeType":"264","messageId":"292","endLine":50,"endColumn":45},{"ruleId":"290","severity":2,"message":"300","line":50,"column":53,"nodeType":"264","messageId":"292","endLine":50,"endColumn":60},{"ruleId":"290","severity":2,"message":"301","line":50,"column":63,"nodeType":"264","messageId":"292","endLine":50,"endColumn":70},"no-native-reassign",["302"],"no-negated-in-lhs",["303"],"no-unused-vars","'ReactstrapNavLink' is defined but never used.","Identifier","unusedVar","'backgroundColors' is defined but never used.",["302"],["303"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'CardText' is defined but never used.",["302"],["303"],"'useRef' is defined but never used.","'axios' is defined but never used.","'CardFooter' is defined but never used.","'oldKpi' is assigned a value but never used.","'Table' is defined but never used.","'Input' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-undef","'Kpi' is not defined.","undef","eqeqeq","Expected '===' and instead saw '=='.","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'oldEval' is not defined.","'newEval' is not defined.","no-global-assign","no-unsafe-negation"]